{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{callNative}from\"../NativeNfcManager\";import{handleNativeException}from\"../NfcError\";var MifareClassicHandlerAndroid=function(){function MifareClassicHandlerAndroid(nfcManager){_classCallCheck(this,MifareClassicHandlerAndroid);this.nfcManager=nfcManager;}_createClass(MifareClassicHandlerAndroid,[{key:\"mifareClassicAuthenticateA\",value:function(){var _mifareClassicAuthenticateA=_asyncToGenerator(function*(sector,key){if(!key||!Array.isArray(key)||key.length!==6){throw new Error('key should be an Array[6] of integers (0 - 255)');}return handleNativeException(callNative('mifareClassicAuthenticateA',[sector,key]));});function mifareClassicAuthenticateA(_x,_x2){return _mifareClassicAuthenticateA.apply(this,arguments);}return mifareClassicAuthenticateA;}()},{key:\"mifareClassicAuthenticateB\",value:function(){var _mifareClassicAuthenticateB=_asyncToGenerator(function*(sector,key){if(!key||!Array.isArray(key)||key.length!==6){throw new Error('key should be an Array[6] of integers (0 - 255)');}return handleNativeException(callNative('mifareClassicAuthenticateB',[sector,key]));});function mifareClassicAuthenticateB(_x3,_x4){return _mifareClassicAuthenticateB.apply(this,arguments);}return mifareClassicAuthenticateB;}()},{key:\"mifareClassicGetBlockCountInSector\",value:function(){var _mifareClassicGetBlockCountInSector=_asyncToGenerator(function*(sector){return handleNativeException(callNative('mifareClassicGetBlockCountInSector',[sector]));});function mifareClassicGetBlockCountInSector(_x5){return _mifareClassicGetBlockCountInSector.apply(this,arguments);}return mifareClassicGetBlockCountInSector;}()},{key:\"mifareClassicGetSectorCount\",value:function(){var _mifareClassicGetSectorCount=_asyncToGenerator(function*(){return handleNativeException(callNative('mifareClassicGetSectorCount'));});function mifareClassicGetSectorCount(){return _mifareClassicGetSectorCount.apply(this,arguments);}return mifareClassicGetSectorCount;}()},{key:\"mifareClassicSectorToBlock\",value:function(){var _mifareClassicSectorToBlock=_asyncToGenerator(function*(sector){return handleNativeException(callNative('mifareClassicSectorToBlock',[sector]));});function mifareClassicSectorToBlock(_x6){return _mifareClassicSectorToBlock.apply(this,arguments);}return mifareClassicSectorToBlock;}()},{key:\"mifareClassicReadBlock\",value:function(){var _mifareClassicReadBlock=_asyncToGenerator(function*(block){return handleNativeException(callNative('mifareClassicReadBlock',[block]));});function mifareClassicReadBlock(_x7){return _mifareClassicReadBlock.apply(this,arguments);}return mifareClassicReadBlock;}()},{key:\"mifareClassicReadSector\",value:function(){var _mifareClassicReadSector=_asyncToGenerator(function*(sector){return handleNativeException(callNative('mifareClassicReadSector',[sector]));});function mifareClassicReadSector(_x8){return _mifareClassicReadSector.apply(this,arguments);}return mifareClassicReadSector;}()},{key:\"mifareClassicWriteBlock\",value:function(){var _mifareClassicWriteBlock=_asyncToGenerator(function*(block,data){if(!data||!Array.isArray(data)||data.length!==this.nfcManager.MIFARE_BLOCK_SIZE){throw new Error(\"data should be a non-empty Array[\"+this.nfcManager.MIFARE_BLOCK_SIZE+\"] of integers (0 - 255)\");}return handleNativeException(callNative('mifareClassicWriteBlock',[block,data]));});function mifareClassicWriteBlock(_x9,_x10){return _mifareClassicWriteBlock.apply(this,arguments);}return mifareClassicWriteBlock;}()},{key:\"mifareClassicIncrementBlock\",value:function(){var _mifareClassicIncrementBlock=_asyncToGenerator(function*(block,value){if(!value||Number.isNaN(value)){throw new Error(\"value should be a number\");}return handleNativeException(callNative('mifareClassicIncrementBlock',[block,value]));});function mifareClassicIncrementBlock(_x11,_x12){return _mifareClassicIncrementBlock.apply(this,arguments);}return mifareClassicIncrementBlock;}()},{key:\"mifareClassicDecrementBlock\",value:function(){var _mifareClassicDecrementBlock=_asyncToGenerator(function*(block,value){if(!value||Number.isNaN(value)){throw new Error(\"value should be a number\");}return handleNativeException(callNative('mifareClassicDecrementBlock',[block,value]));});function mifareClassicDecrementBlock(_x13,_x14){return _mifareClassicDecrementBlock.apply(this,arguments);}return mifareClassicDecrementBlock;}()},{key:\"mifareClassicTransferBlock\",value:function(){var _mifareClassicTransferBlock=_asyncToGenerator(function*(block){if(!block||Number.isNaN(block)){throw new Error(\"block should be a number\");}return handleNativeException(callNative('mifareClassicTransferBlock',[block]));});function mifareClassicTransferBlock(_x15){return _mifareClassicTransferBlock.apply(this,arguments);}return mifareClassicTransferBlock;}()}]);return MifareClassicHandlerAndroid;}();export{MifareClassicHandlerAndroid};","map":{"version":3,"names":["callNative","handleNativeException","MifareClassicHandlerAndroid","nfcManager","sector","key","Array","isArray","length","Error","block","data","MIFARE_BLOCK_SIZE","value","Number","isNaN"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-nfc-manager/src/NfcTech/MifareClassicHandlerAndroid.js"],"sourcesContent":["import {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass MifareClassicHandlerAndroid {\n  constructor(nfcManager) {\n    this.nfcManager = nfcManager;\n  }\n\n  async mifareClassicAuthenticateA(sector, key) {\n    if (!key || !Array.isArray(key) || key.length !== 6) {\n      throw new Error('key should be an Array[6] of integers (0 - 255)');\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicAuthenticateA', [sector, key]),\n    );\n  }\n\n  async mifareClassicAuthenticateB(sector, key) {\n    if (!key || !Array.isArray(key) || key.length !== 6) {\n      throw new Error('key should be an Array[6] of integers (0 - 255)');\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicAuthenticateB', [sector, key]),\n    );\n  }\n\n  async mifareClassicGetBlockCountInSector(sector) {\n    return handleNativeException(\n      callNative('mifareClassicGetBlockCountInSector', [sector]),\n    );\n  }\n\n  async mifareClassicGetSectorCount() {\n    return handleNativeException(callNative('mifareClassicGetSectorCount'));\n  }\n\n  async mifareClassicSectorToBlock(sector) {\n    return handleNativeException(\n      callNative('mifareClassicSectorToBlock', [sector]),\n    );\n  }\n\n  async mifareClassicReadBlock(block) {\n    return handleNativeException(callNative('mifareClassicReadBlock', [block]));\n  }\n\n  async mifareClassicReadSector(sector) {\n    return handleNativeException(\n      callNative('mifareClassicReadSector', [sector]),\n    );\n  }\n\n  async mifareClassicWriteBlock(block, data) {\n    if (\n      !data ||\n      !Array.isArray(data) ||\n      data.length !== this.nfcManager.MIFARE_BLOCK_SIZE\n    ) {\n      throw new Error(\n        `data should be a non-empty Array[${this.nfcManager.MIFARE_BLOCK_SIZE}] of integers (0 - 255)`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicWriteBlock', [block, data]),\n    );\n  }\n\n  async mifareClassicIncrementBlock(block, value) {\n    if (\n      !value ||\n      Number.isNaN(value)) {\n      throw new Error(\n        `value should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicIncrementBlock', [block, value]),\n    );\n  }\n\n  async mifareClassicDecrementBlock(block, value) {\n    if (\n      !value ||\n      Number.isNaN(value)) {\n      throw new Error(\n        `value should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicDecrementBlock', [block, value]),\n    );\n  }\n  async mifareClassicTransferBlock(block) {\n    if (\n      !block ||\n      Number.isNaN(block)) {\n      throw new Error(\n        `block should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicTransferBlock', [block]),\n    );\n  }\n\n}\n\nexport {MifareClassicHandlerAndroid};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}