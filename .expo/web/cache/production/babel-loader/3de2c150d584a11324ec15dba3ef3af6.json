{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.default=void 0;var TouchHistoryMath={centroidDimension:function centroidDimension(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){var touchBank=touchHistory.touchBank;var total=0;var count=0;var oneTouchData=touchHistory.numberActiveTouches===1?touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;if(oneTouchData!==null){if(oneTouchData.touchActive&&oneTouchData.currentTimeStamp>touchesChangedAfter){total+=ofCurrent&&isXAxis?oneTouchData.currentPageX:ofCurrent&&!isXAxis?oneTouchData.currentPageY:!ofCurrent&&isXAxis?oneTouchData.previousPageX:oneTouchData.previousPageY;count=1;}}else{for(var i=0;i<touchBank.length;i++){var touchTrack=touchBank[i];if(touchTrack!==null&&touchTrack!==undefined&&touchTrack.touchActive&&touchTrack.currentTimeStamp>=touchesChangedAfter){var toAdd=void 0;if(ofCurrent&&isXAxis){toAdd=touchTrack.currentPageX;}else if(ofCurrent&&!isXAxis){toAdd=touchTrack.currentPageY;}else if(!ofCurrent&&isXAxis){toAdd=touchTrack.previousPageX;}else{toAdd=touchTrack.previousPageY;}total+=toAdd;count++;}}}return count>0?total/count:TouchHistoryMath.noCentroid;},currentCentroidXOfTouchesChangedAfter:function currentCentroidXOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,true,true);},currentCentroidYOfTouchesChangedAfter:function currentCentroidYOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,false,true);},previousCentroidXOfTouchesChangedAfter:function previousCentroidXOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,true,false);},previousCentroidYOfTouchesChangedAfter:function previousCentroidYOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,false,false);},currentCentroidX:function currentCentroidX(touchHistory){return TouchHistoryMath.centroidDimension(touchHistory,0,true,true);},currentCentroidY:function currentCentroidY(touchHistory){return TouchHistoryMath.centroidDimension(touchHistory,0,false,true);},noCentroid:-1};var _default=TouchHistoryMath;exports.default=_default;module.exports=exports.default;","map":{"version":3,"names":["exports","__esModule","default","TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","length","touchTrack","undefined","toAdd","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","_default","module"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-web/dist/cjs/vendor/react-native/TouchHistoryMath/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nvar TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {\n    var touchBank = touchHistory.touchBank;\n    var total = 0;\n    var count = 0;\n    var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;\n\n    if (oneTouchData !== null) {\n      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {\n        total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (var i = 0; i < touchBank.length; i++) {\n        var touchTrack = touchBank[i];\n\n        if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {\n          var toAdd = void 0; // Yuck, program temporarily in invalid state.\n\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n  currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis\n    true // ofCurrent\n    );\n  },\n  currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis\n    true // ofCurrent\n    );\n  },\n  previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis\n    false // ofCurrent\n    );\n  },\n  previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis\n    false // ofCurrent\n    );\n  },\n  currentCentroidX: function currentCentroidX(touchHistory) {\n    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter\n    true, // isXAxis\n    true // ofCurrent\n    );\n  },\n  currentCentroidY: function currentCentroidY(touchHistory) {\n    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter\n    false, // isXAxis\n    true // ofCurrent\n    );\n  },\n  noCentroid: -1\n};\nvar _default = TouchHistoryMath;\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}