{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{callNative}from\"../NativeNfcManager\";import{handleNativeException}from\"../NfcError\";var MifareUltralightHandlerAndroid=function(){function MifareUltralightHandlerAndroid(nfcManager){_classCallCheck(this,MifareUltralightHandlerAndroid);this.nfcManager=nfcManager;}_createClass(MifareUltralightHandlerAndroid,[{key:\"mifareUltralightReadPages\",value:function(){var _mifareUltralightReadPages=_asyncToGenerator(function*(pageOffset){return handleNativeException(callNative('mifareUltralightReadPages',[pageOffset]));});function mifareUltralightReadPages(_x){return _mifareUltralightReadPages.apply(this,arguments);}return mifareUltralightReadPages;}()},{key:\"mifareUltralightWritePage\",value:function(){var _mifareUltralightWritePage=_asyncToGenerator(function*(pageOffset,data){if(!data||!Array.isArray(data)||data.length!==this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE){throw new Error(\"data should be a non-empty Array[\"+this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE+\"] of integers (0 - 255)\");}return handleNativeException(callNative('mifareUltralightWritePage',[pageOffset,data]));});function mifareUltralightWritePage(_x2,_x3){return _mifareUltralightWritePage.apply(this,arguments);}return mifareUltralightWritePage;}()}]);return MifareUltralightHandlerAndroid;}();export{MifareUltralightHandlerAndroid};","map":{"version":3,"names":["callNative","handleNativeException","MifareUltralightHandlerAndroid","nfcManager","pageOffset","data","Array","isArray","length","MIFARE_ULTRALIGHT_PAGE_SIZE","Error"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-nfc-manager/src/NfcTech/MifareUltralightHandlerAndroid.js"],"sourcesContent":["import {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass MifareUltralightHandlerAndroid {\n  constructor(nfcManager) {\n    this.nfcManager = nfcManager;\n  }\n\n  async mifareUltralightReadPages(pageOffset) {\n    return handleNativeException(\n      callNative('mifareUltralightReadPages', [pageOffset]),\n    );\n  }\n\n  async mifareUltralightWritePage(pageOffset, data) {\n    if (\n      !data ||\n      !Array.isArray(data) ||\n      data.length !== this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE\n    ) {\n      throw new Error(\n        `data should be a non-empty Array[${this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE}] of integers (0 - 255)`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareUltralightWritePage', [pageOffset, data]),\n    );\n  }\n}\n\nexport {MifareUltralightHandlerAndroid};\n"],"mappings":"uMAAA,OAAQA,UAAU,2BAClB,OAAQC,qBAAqB,mBAAqB,GAE5CC,+BAA8B,YAClC,wCAAYC,UAAU,CAAE,sDACtB,IAAI,CAACA,UAAU,CAAGA,UAAU,CAC9B,CAAC,gJAED,UAAgCC,UAAU,CAAE,CAC1C,MAAOH,sBAAqB,CAC1BD,UAAU,CAAC,2BAA2B,CAAE,CAACI,UAAU,CAAC,CAAC,CACtD,CACH,CAAC,2OAED,UAAgCA,UAAU,CAAEC,IAAI,CAAE,CAChD,GACE,CAACA,IAAI,EACL,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EACpBA,IAAI,CAACG,MAAM,GAAK,IAAI,CAACL,UAAU,CAACM,2BAA2B,CAC3D,CACA,KAAM,IAAIC,MAAK,qCACuB,IAAI,CAACP,UAAU,CAACM,2BAA2B,2BAChF,CACH,CAEA,MAAOR,sBAAqB,CAC1BD,UAAU,CAAC,2BAA2B,CAAE,CAACI,UAAU,CAAEC,IAAI,CAAC,CAAC,CAC5D,CACH,CAAC,yLAGH,OAAQH,8BAA8B"},"metadata":{},"sourceType":"module"}