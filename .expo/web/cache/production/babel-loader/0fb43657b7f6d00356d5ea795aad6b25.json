{"ast":null,"code":"var util=require(\"./util\");function decode(data){var languageCodeLength=data[0]&0x3f;return util.bytesToString(data.slice(languageCodeLength+1));}function encode(text,lang,encoding){if(!lang){lang='en';}var encoded=util.stringToBytes(lang+text);encoded.unshift(lang.length);return encoded;}module.exports={encodePayload:encode,decodePayload:decode};","map":{"version":3,"names":["util","require","decode","data","languageCodeLength","bytesToString","slice","encode","text","lang","encoding","encoded","stringToBytes","unshift","length","module","exports","encodePayload","decodePayload"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-nfc-manager/ndef-lib/ndef-text.js"],"sourcesContent":["var util = require('./util');\n\n// decode text bytes from ndef record payload\n// @returns a string\nfunction decode(data) {\n  var languageCodeLength = data[0] & 0x3f; // 6 LSBs\n  // languageCode = data.slice(1, 1 + languageCodeLength),\n  // utf16 = (data[0] & 0x80) !== 0; // assuming UTF-16BE\n\n  // TODO need to deal with UTF in the future\n  // console.log(\"lang \" + languageCode + (utf16 ? \" utf16\" : \" utf8\"));\n\n  return util.bytesToString(data.slice(languageCodeLength + 1));\n}\n\n// encode text payload\n// @returns an array of bytes\nfunction encode(text, lang, encoding) {\n  // ISO/IANA language code, but we're not enforcing\n  if (!lang) {\n    lang = 'en';\n  }\n\n  var encoded = util.stringToBytes(lang + text);\n  encoded.unshift(lang.length);\n\n  return encoded;\n}\n\nmodule.exports = {\n  encodePayload: encode,\n  decodePayload: decode,\n};\n"],"mappings":"AAAA,GAAIA,KAAI,CAAGC,OAAO,UAAU,CAI5B,QAASC,OAAM,CAACC,IAAI,CAAE,CACpB,GAAIC,mBAAkB,CAAGD,IAAI,CAAC,CAAC,CAAC,CAAG,IAAI,CAOvC,MAAOH,KAAI,CAACK,aAAa,CAACF,IAAI,CAACG,KAAK,CAACF,kBAAkB,CAAG,CAAC,CAAC,CAAC,CAC/D,CAIA,QAASG,OAAM,CAACC,IAAI,CAAEC,IAAI,CAAEC,QAAQ,CAAE,CAEpC,GAAI,CAACD,IAAI,CAAE,CACTA,IAAI,CAAG,IAAI,CACb,CAEA,GAAIE,QAAO,CAAGX,IAAI,CAACY,aAAa,CAACH,IAAI,CAAGD,IAAI,CAAC,CAC7CG,OAAO,CAACE,OAAO,CAACJ,IAAI,CAACK,MAAM,CAAC,CAE5B,MAAOH,QAAO,CAChB,CAEAI,MAAM,CAACC,OAAO,CAAG,CACfC,aAAa,CAAEV,MAAM,CACrBW,aAAa,CAAEhB,MACjB,CAAC"},"metadata":{},"sourceType":"script"}