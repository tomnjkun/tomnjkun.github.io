{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\").default;exports.__esModule=true;exports.default=usePressEvents;var _PressResponder=_interopRequireDefault(require(\"./PressResponder\"));var _react=require(\"react\");function usePressEvents(hostRef,config){var pressResponderRef=(0,_react.useRef)(null);if(pressResponderRef.current==null){pressResponderRef.current=new _PressResponder.default(config);}var pressResponder=pressResponderRef.current;(0,_react.useEffect)(function(){pressResponder.configure(config);},[config,pressResponder]);(0,_react.useEffect)(function(){return function(){pressResponder.reset();};},[pressResponder]);(0,_react.useDebugValue)(config);return pressResponder.getEventHandlers();}module.exports=exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","usePressEvents","_PressResponder","_react","hostRef","config","pressResponderRef","useRef","current","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers","module"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-web/dist/cjs/modules/usePressEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"],"mappings":"AASA,YAAY,CAEZ,GAAIA,uBAAsB,CAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO,CAE5FC,OAAO,CAACC,UAAU,CAAG,IAAI,CACzBD,OAAO,CAACD,OAAO,CAAGG,cAAc,CAEhC,GAAIC,gBAAe,CAAGN,sBAAsB,CAACC,OAAO,oBAAoB,CAAC,CAEzE,GAAIM,OAAM,CAAGN,OAAO,CAAC,OAAO,CAAC,CAE7B,QAASI,eAAc,CAACG,OAAO,CAAEC,MAAM,CAAE,CACvC,GAAIC,kBAAiB,CAAG,CAAC,CAAC,CAAEH,MAAM,CAACI,MAAM,EAAE,IAAI,CAAC,CAEhD,GAAID,iBAAiB,CAACE,OAAO,EAAI,IAAI,CAAE,CACrCF,iBAAiB,CAACE,OAAO,CAAG,GAAIN,gBAAe,CAACJ,OAAO,CAACO,MAAM,CAAC,CACjE,CAEA,GAAII,eAAc,CAAGH,iBAAiB,CAACE,OAAO,CAE9C,CAAC,CAAC,CAAEL,MAAM,CAACO,SAAS,EAAE,UAAM,CAC1BD,cAAc,CAACE,SAAS,CAACN,MAAM,CAAC,CAClC,CAAC,CAAE,CAACA,MAAM,CAAEI,cAAc,CAAC,CAAC,CAG5B,CAAC,CAAC,CAAEN,MAAM,CAACO,SAAS,EAAE,UAAM,CAC1B,MAAO,WAAM,CACXD,cAAc,CAACG,KAAK,EAAE,CACxB,CAAC,CACH,CAAC,CAAE,CAACH,cAAc,CAAC,CAAC,CACpB,CAAC,CAAC,CAAEN,MAAM,CAACU,aAAa,EAAER,MAAM,CAAC,CACjC,MAAOI,eAAc,CAACK,gBAAgB,EAAE,CAC1C,CAEAC,MAAM,CAAChB,OAAO,CAAGA,OAAO,CAACD,OAAO"},"metadata":{},"sourceType":"script"}