{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"../primitives/Text\";import View from\"../primitives/View\";function createView(){var nativeProps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return forwardRef(function(props,ref){return React.createElement(View,_objectSpread(_objectSpread(_objectSpread({},nativeProps),props),{},{ref:ref}));});}export var UL=createView(Platform.select({web:{accessibilityRole:'list'}}));function isTextProps(props){return typeof props.children==='string';}export var LI=forwardRef(function(props,ref){if(isTextProps(props)){var _accessibilityRole=Platform.select({web:'listitem',default:props.accessibilityRole});return React.createElement(Text,_objectSpread(_objectSpread({},props),{},{accessibilityRole:_accessibilityRole,ref:ref}));}var accessibilityRole=Platform.select({web:'listitem',default:props.accessibilityRole});return React.createElement(View,_objectSpread(_objectSpread({},props),{},{accessibilityRole:accessibilityRole,ref:ref}));});","map":{"version":3,"sources":["../../src/elements/Lists.tsx"],"names":[],"mappings":"w0BAAA,MAAO,MAAK,EAAmB,UAAU,KAA2B,OAAO,CAAC,6DAG5E,MAAO,KAAmB,0BAC1B,MAAO,KAAmB,0BAE1B,QAAS,WAAU,EAA4B,IAA3B,YAAA,2DAAyB,CAAA,CAAE,CAC7C,MAAO,WAAU,CAAC,SAAC,KAAgB,CAAE,GAAG,CAAI,CAC1C,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,8CAAK,WAAW,EAAM,KAAK,MAAE,GAAG,CAAE,GAAG,GAAI,CACvD,CAAC,CAA6B,CAChC,CAEA,MAAO,IAAM,GAAE,CAAG,UAAU,CAC1B,QAAQ,CAAC,MAAM,CAAC,CACd,GAAG,CAAE,CACH,iBAAiB,CAAE,MACpB,C,CACF,CAAC,CACH,CAED,QAAS,YAAW,CAAC,KAAU,CAAA,CAE7B,MAAO,OAAO,MAAK,CAAC,QAAQ,GAAK,QAAQ,CAC3C,CAIA,MAAO,IAAM,GAAE,CAAG,UAAU,CAAC,SAAC,KAAiC,CAAE,GAAQ,CAAI,CAC3E,GAAI,WAAW,CAAC,KAAK,CAAC,CAAE,CACtB,GAAM,mBAAiB,CAAiC,QAAQ,CAAC,MAAM,CAAC,CACtE,GAAG,CAAE,UAAU,CACf,OAAO,CAAE,KAAK,CAAC,iB,CAChB,CAAC,CACF,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,gCAAK,KAAK,MAAE,iBAAiB,CAAE,kBAAiB,CAAE,GAAG,CAAE,GAAG,GAAI,CAC3E,CACD,GAAM,kBAAiB,CAAiC,QAAQ,CAAC,MAAM,CAAC,CACtE,GAAG,CAAE,UAAU,CACf,OAAO,CAAE,KAAK,CAAC,iB,CAChB,CAAC,CACF,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,gCAAK,KAAK,MAAE,iBAAiB,CAAE,iBAAiB,CAAE,GAAG,CAAE,GAAG,GAAI,CAC5E,CAAC,CAA2B","sourcesContent":["import React, { ComponentType, forwardRef, PropsWithChildren } from 'react';\nimport { Platform } from 'react-native';\n\nimport Text, { TextProps } from '../primitives/Text';\nimport View, { ViewProps } from '../primitives/View';\n\nfunction createView(nativeProps: ViewProps = {}): ComponentType<ViewProps> {\n  return forwardRef((props: ViewProps, ref) => {\n    return <View {...nativeProps} {...props} ref={ref} />;\n  }) as ComponentType<ViewProps>;\n}\n\nexport const UL = createView(\n  Platform.select({\n    web: {\n      accessibilityRole: 'list',\n    },\n  })\n);\n\nfunction isTextProps(props: any): props is TextProps {\n  // Treat <li></li> as a Text element.\n  return typeof props.children === 'string';\n}\n\ntype LIProps = TextProps | ViewProps;\n\nexport const LI = forwardRef((props: PropsWithChildren<LIProps>, ref: any) => {\n  if (isTextProps(props)) {\n    const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n      web: 'listitem',\n      default: props.accessibilityRole,\n    });\n    return <Text {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n  }\n  const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n    web: 'listitem',\n    default: props.accessibilityRole,\n  });\n  return <View {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n}) as ComponentType<LIProps>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}