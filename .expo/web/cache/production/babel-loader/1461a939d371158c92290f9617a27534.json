{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var dataUriPattern=/^data:/;export var ImageUriCache=function(){function ImageUriCache(){_classCallCheck(this,ImageUriCache);}_createClass(ImageUriCache,null,[{key:\"has\",value:function has(uri){var entries=ImageUriCache._entries;var isDataUri=dataUriPattern.test(uri);return isDataUri||Boolean(entries[uri]);}},{key:\"add\",value:function add(uri){var entries=ImageUriCache._entries;var lastUsedTimestamp=Date.now();if(entries[uri]){entries[uri].lastUsedTimestamp=lastUsedTimestamp;entries[uri].refCount+=1;}else{entries[uri]={lastUsedTimestamp:lastUsedTimestamp,refCount:1};}}},{key:\"remove\",value:function remove(uri){var entries=ImageUriCache._entries;if(entries[uri]){entries[uri].refCount-=1;}ImageUriCache._cleanUpIfNeeded();}},{key:\"_cleanUpIfNeeded\",value:function _cleanUpIfNeeded(){var entries=ImageUriCache._entries;var imageUris=Object.keys(entries);if(imageUris.length+1>ImageUriCache._maximumEntries){var leastRecentlyUsedKey;var leastRecentlyUsedEntry;imageUris.forEach(function(uri){var entry=entries[uri];if((!leastRecentlyUsedEntry||entry.lastUsedTimestamp<leastRecentlyUsedEntry.lastUsedTimestamp)&&entry.refCount===0){leastRecentlyUsedKey=uri;leastRecentlyUsedEntry=entry;}});if(leastRecentlyUsedKey){delete entries[leastRecentlyUsedKey];}}}}]);return ImageUriCache;}();ImageUriCache._maximumEntries=256;ImageUriCache._entries={};var id=0;var requests={};var ImageLoader={abort:function abort(requestId){var image=requests[\"\"+requestId];if(image){image.onerror=null;image.onload=null;image=null;delete requests[\"\"+requestId];}},getSize:function getSize(uri,success,failure){var complete=false;var interval=setInterval(callback,16);var requestId=ImageLoader.load(uri,callback,errorCallback);function callback(){var image=requests[\"\"+requestId];if(image){var naturalHeight=image.naturalHeight,naturalWidth=image.naturalWidth;if(naturalHeight&&naturalWidth){success(naturalWidth,naturalHeight);complete=true;}}if(complete){ImageLoader.abort(requestId);clearInterval(interval);}}function errorCallback(){if(typeof failure==='function'){failure();}ImageLoader.abort(requestId);clearInterval(interval);}},has:function has(uri){return ImageUriCache.has(uri);},load:function load(uri,onLoad,onError){id+=1;var image=new window.Image();image.onerror=onError;image.onload=function(e){var onDecode=function onDecode(){return onLoad({nativeEvent:e});};if(typeof image.decode==='function'){image.decode().then(onDecode,onDecode);}else{setTimeout(onDecode,0);}};image.src=uri;requests[\"\"+id]=image;return id;},prefetch:function prefetch(uri){return new Promise(function(resolve,reject){ImageLoader.load(uri,function(){ImageUriCache.add(uri);ImageUriCache.remove(uri);resolve();},reject);});},queryCache:function queryCache(uris){var result={};uris.forEach(function(u){if(ImageUriCache.has(u)){result[u]='disk/memory';}});return Promise.resolve(result);}};export default ImageLoader;","map":{"version":3,"names":["dataUriPattern","ImageUriCache","uri","entries","_entries","isDataUri","test","Boolean","lastUsedTimestamp","Date","now","refCount","_cleanUpIfNeeded","imageUris","Object","keys","length","_maximumEntries","leastRecentlyUsedKey","leastRecentlyUsedEntry","forEach","entry","id","requests","ImageLoader","abort","requestId","image","onerror","onload","getSize","success","failure","complete","interval","setInterval","callback","load","errorCallback","naturalHeight","naturalWidth","clearInterval","has","onLoad","onError","window","Image","e","onDecode","nativeEvent","decode","then","setTimeout","src","prefetch","Promise","resolve","reject","add","remove","queryCache","uris","result","u"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-web/dist/modules/ImageLoader/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar dataUriPattern = /^data:/;\nexport class ImageUriCache {\n  static has(uri) {\n    var entries = ImageUriCache._entries;\n    var isDataUri = dataUriPattern.test(uri);\n    return isDataUri || Boolean(entries[uri]);\n  }\n\n  static add(uri) {\n    var entries = ImageUriCache._entries;\n    var lastUsedTimestamp = Date.now();\n\n    if (entries[uri]) {\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n      entries[uri].refCount += 1;\n    } else {\n      entries[uri] = {\n        lastUsedTimestamp,\n        refCount: 1\n      };\n    }\n  }\n\n  static remove(uri) {\n    var entries = ImageUriCache._entries;\n\n    if (entries[uri]) {\n      entries[uri].refCount -= 1;\n    } // Free up entries when the cache is \"full\"\n\n\n    ImageUriCache._cleanUpIfNeeded();\n  }\n\n  static _cleanUpIfNeeded() {\n    var entries = ImageUriCache._entries;\n    var imageUris = Object.keys(entries);\n\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n      var leastRecentlyUsedKey;\n      var leastRecentlyUsedEntry;\n      imageUris.forEach(uri => {\n        var entry = entries[uri];\n\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n          leastRecentlyUsedKey = uri;\n          leastRecentlyUsedEntry = entry;\n        }\n      });\n\n      if (leastRecentlyUsedKey) {\n        delete entries[leastRecentlyUsedKey];\n      }\n    }\n  }\n\n}\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nvar id = 0;\nvar requests = {};\nvar ImageLoader = {\n  abort(requestId) {\n    var image = requests[\"\" + requestId];\n\n    if (image) {\n      image.onerror = null;\n      image.onload = null;\n      image = null;\n      delete requests[\"\" + requestId];\n    }\n  },\n\n  getSize(uri, success, failure) {\n    var complete = false;\n    var interval = setInterval(callback, 16);\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\n\n    function callback() {\n      var image = requests[\"\" + requestId];\n\n      if (image) {\n        var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n\n        if (naturalHeight && naturalWidth) {\n          success(naturalWidth, naturalHeight);\n          complete = true;\n        }\n      }\n\n      if (complete) {\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    }\n\n    function errorCallback() {\n      if (typeof failure === 'function') {\n        failure();\n      }\n\n      ImageLoader.abort(requestId);\n      clearInterval(interval);\n    }\n  },\n\n  has(uri) {\n    return ImageUriCache.has(uri);\n  },\n\n  load(uri, onLoad, onError) {\n    id += 1;\n    var image = new window.Image();\n    image.onerror = onError;\n\n    image.onload = e => {\n      // avoid blocking the main thread\n      var onDecode = () => onLoad({\n        nativeEvent: e\n      });\n\n      if (typeof image.decode === 'function') {\n        // Safari currently throws exceptions when decoding svgs.\n        // We want to catch that error and allow the load handler\n        // to be forwarded to the onLoad handler in this case\n        image.decode().then(onDecode, onDecode);\n      } else {\n        setTimeout(onDecode, 0);\n      }\n    };\n\n    image.src = uri;\n    requests[\"\" + id] = image;\n    return id;\n  },\n\n  prefetch(uri) {\n    return new Promise((resolve, reject) => {\n      ImageLoader.load(uri, () => {\n        // Add the uri to the cache so it can be immediately displayed when used\n        // but also immediately remove it to correctly reflect that it has no active references\n        ImageUriCache.add(uri);\n        ImageUriCache.remove(uri);\n        resolve();\n      }, reject);\n    });\n  },\n\n  queryCache(uris) {\n    var result = {};\n    uris.forEach(u => {\n      if (ImageUriCache.has(u)) {\n        result[u] = 'disk/memory';\n      }\n    });\n    return Promise.resolve(result);\n  }\n\n};\nexport default ImageLoader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}