{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = mergeRefs;\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","mergeRefs","React","_len","arguments","length","args","Array","_key","forwardRef","node","forEach","ref","current","console","error","String","module"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-web/dist/cjs/modules/mergeRefs/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = mergeRefs;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(ref => {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAE9FC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACD,OAAO,GAAGG,SAAS;AAE3B,IAAIC,KAAK,GAAGN,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;AAUrD,SAASI,SAAS,GAAG;EACnB,KAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAC9B;EAEA,OAAO,SAASC,UAAU,CAACC,IAAI,EAAE;IAC/BJ,IAAI,CAACK,OAAO,CAAC,UAAAC,GAAG,EAAI;MAClB,IAAIA,GAAG,IAAI,IAAI,EAAE;QACf;MACF;MAEA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC7BA,GAAG,CAACF,IAAI,CAAC;QACT;MACF;MAEA,IAAI,OAAOE,GAAG,KAAK,QAAQ,EAAE;QAC3BA,GAAG,CAACC,OAAO,GAAGH,IAAI;QAClB;MACF;MAEAI,OAAO,CAACC,KAAK,CAAC,+EAA+E,GAAGC,MAAM,CAACJ,GAAG,CAAC,CAAC;IAC9G,CAAC,CAAC;EACJ,CAAC;AACH;AAEAK,MAAM,CAAClB,OAAO,GAAGA,OAAO,CAACD,OAAO"},"metadata":{},"sourceType":"script"}