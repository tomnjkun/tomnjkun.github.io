{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nvar NativeNfcManager = NativeModules.NfcManager;\nvar NfcManagerEmitter = new NativeEventEmitter(NativeNfcManager);\nfunction callNative(name) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var nativeMethod = NativeNfcManager[name];\n  if (!nativeMethod) {\n    throw new Error(\"no such native method: \\\"\" + name + \"\\\"\");\n  }\n  if (!Array.isArray(params)) {\n    throw new Error('params must be an array');\n  }\n  var createCallback = function createCallback(resolve, reject) {\n    return function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    };\n  };\n  return new Promise(function (resolve, reject) {\n    var callback = createCallback(resolve, reject);\n    var inputParams = [].concat(_toConsumableArray(params), [callback]);\n    nativeMethod.apply(void 0, _toConsumableArray(inputParams));\n  });\n}\nexport { NativeNfcManager, NfcManagerEmitter, callNative };","map":{"version":3,"names":["NativeNfcManager","NativeModules","NfcManager","NfcManagerEmitter","NativeEventEmitter","callNative","name","params","nativeMethod","Error","Array","isArray","createCallback","resolve","reject","err","result","Promise","callback","inputParams"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-nfc-manager/src/NativeNfcManager.js"],"sourcesContent":["'use strict';\nimport {NativeModules, NativeEventEmitter} from 'react-native';\n\nconst NativeNfcManager = NativeModules.NfcManager;\nconst NfcManagerEmitter = new NativeEventEmitter(NativeNfcManager);\n\nfunction callNative(name, params = []) {\n  const nativeMethod = NativeNfcManager[name];\n\n  if (!nativeMethod) {\n    throw new Error(`no such native method: \"${name}\"`);\n  }\n\n  if (!Array.isArray(params)) {\n    throw new Error('params must be an array');\n  }\n\n  const createCallback = (resolve, reject) => (err, result) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  };\n\n  return new Promise((resolve, reject) => {\n    const callback = createCallback(resolve, reject);\n    const inputParams = [...params, callback];\n    nativeMethod(...inputParams);\n  });\n}\n\nexport {NativeNfcManager, NfcManagerEmitter, callNative};\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAGb,IAAMA,gBAAgB,GAAGC,aAAa,CAACC,UAAU;AACjD,IAAMC,iBAAiB,GAAG,IAAIC,kBAAkB,CAACJ,gBAAgB,CAAC;AAElE,SAASK,UAAU,CAACC,IAAI,EAAe;EAAA,IAAbC,MAAM,uEAAG,EAAE;EACnC,IAAMC,YAAY,GAAGR,gBAAgB,CAACM,IAAI,CAAC;EAE3C,IAAI,CAACE,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,+BAA4BH,IAAI,QAAI;EACrD;EAEA,IAAI,CAACI,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAc,CAAIC,OAAO,EAAEC,MAAM;IAAA,OAAK,UAACC,GAAG,EAAEC,MAAM,EAAK;MAC3D,IAAID,GAAG,EAAE;QACPD,MAAM,CAACC,GAAG,CAAC;MACb,CAAC,MAAM;QACLF,OAAO,CAACG,MAAM,CAAC;MACjB;IACF,CAAC;EAAA;EAED,OAAO,IAAIC,OAAO,CAAC,UAACJ,OAAO,EAAEC,MAAM,EAAK;IACtC,IAAMI,QAAQ,GAAGN,cAAc,CAACC,OAAO,EAAEC,MAAM,CAAC;IAChD,IAAMK,WAAW,gCAAOZ,MAAM,IAAEW,QAAQ,EAAC;IACzCV,YAAY,kCAAIW,WAAW,EAAC;EAC9B,CAAC,CAAC;AACJ;AAEA,SAAQnB,gBAAgB,EAAEG,iBAAiB,EAAEE,UAAU"},"metadata":{},"sourceType":"module"}