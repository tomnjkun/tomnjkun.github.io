{"ast":null,"code":"\n'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _Platform = _interopRequireDefault(require(\"../../../exports/Platform\"));\nvar _RCTDeviceEventEmitter = _interopRequireDefault(require(\"./RCTDeviceEventEmitter\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar NativeEventEmitter = function () {\n  function NativeEventEmitter(nativeModule) {\n    _classCallCheck(this, NativeEventEmitter);\n    if (_Platform.default.OS === 'ios') {\n      (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n  _createClass(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      var _this = this;\n      var _this$_nativeModule;\n      (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n      var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n      return {\n        remove: function remove() {\n          if (subscription != null) {\n            var _this$_nativeModule2;\n            (_this$_nativeModule2 = _this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1);\n\n            subscription.remove();\n            subscription = null;\n          }\n        }\n      };\n    }\n  }, {\n    key: \"removeListener\",\n    value:\n\n    function removeListener(eventType, listener) {\n      var _this$_nativeModule3;\n      (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1);\n\n      _RCTDeviceEventEmitter.default.removeListener(eventType, listener);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventType) {\n      var _RCTDeviceEventEmitte;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_RCTDeviceEventEmitte = _RCTDeviceEventEmitter.default).emit.apply(_RCTDeviceEventEmitte, [eventType].concat(args));\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      var _this$_nativeModule4;\n      (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n      (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n      _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(eventType) {\n      return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n    }\n  }]);\n  return NativeEventEmitter;\n}();\nexports.default = NativeEventEmitter;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_Platform","_RCTDeviceEventEmitter","_invariant","NativeEventEmitter","nativeModule","OS","_nativeModule","eventType","listener","context","_this$_nativeModule","addListener","subscription","remove","_this$_nativeModule2","removeListeners","_this$_nativeModule3","removeListener","_len","arguments","length","args","Array","_key","emit","_this$_nativeModule4","listenerCount","removeAllListeners","module"],"sources":["/Users/dp-tonmai/Documents/GitHub/tomnjkun.github.io/node_modules/react-native-web/dist/cjs/vendor/react-native/NativeEventEmitter/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Platform = _interopRequireDefault(require(\"../../../exports/Platform\"));\n\nvar _RCTDeviceEventEmitter = _interopRequireDefault(require(\"./RCTDeviceEventEmitter\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nclass NativeEventEmitter {\n  constructor(nativeModule) {\n    if (_Platform.default.OS === 'ios') {\n      (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType, listener, context) {\n    var _this$_nativeModule;\n\n    (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n\n    var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n\n    return {\n      remove: () => {\n        if (subscription != null) {\n          var _this$_nativeModule2;\n\n          (_this$_nativeModule2 = this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1); // $FlowFixMe[incompatible-use]\n\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n\n\n  removeListener(eventType, listener) {\n    var _this$_nativeModule3;\n\n    (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1); // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n\n    _RCTDeviceEventEmitter.default.removeListener(eventType, listener);\n  }\n\n  emit(eventType) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    _RCTDeviceEventEmitter.default.emit(eventType, ...args);\n  }\n\n  removeAllListeners(eventType) {\n    var _this$_nativeModule4;\n\n    (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n\n    _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n  }\n\n  listenerCount(eventType) {\n    return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n  }\n\n}\n\nexports.default = NativeEventEmitter;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}