{"ast":null,"code":"var util = require(\"./util\");\n\nfunction decode(data) {\n  var languageCodeLength = data[0] & 0x3f;\n\n  return util.bytesToString(data.slice(languageCodeLength + 1));\n}\n\nfunction encode(text, lang, encoding) {\n  if (!lang) {\n    lang = 'en';\n  }\n  var encoded = util.stringToBytes(lang + text);\n  encoded.unshift(lang.length);\n  return encoded;\n}\nmodule.exports = {\n  encodePayload: encode,\n  decodePayload: decode\n};","map":{"version":3,"names":["util","require","decode","data","languageCodeLength","bytesToString","slice","encode","text","lang","encoding","encoded","stringToBytes","unshift","length","module","exports","encodePayload","decodePayload"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-nfc-manager/ndef-lib/ndef-text.js"],"sourcesContent":["var util = require('./util');\n\n// decode text bytes from ndef record payload\n// @returns a string\nfunction decode(data) {\n  var languageCodeLength = data[0] & 0x3f; // 6 LSBs\n  // languageCode = data.slice(1, 1 + languageCodeLength),\n  // utf16 = (data[0] & 0x80) !== 0; // assuming UTF-16BE\n\n  // TODO need to deal with UTF in the future\n  // console.log(\"lang \" + languageCode + (utf16 ? \" utf16\" : \" utf8\"));\n\n  return util.bytesToString(data.slice(languageCodeLength + 1));\n}\n\n// encode text payload\n// @returns an array of bytes\nfunction encode(text, lang, encoding) {\n  // ISO/IANA language code, but we're not enforcing\n  if (!lang) {\n    lang = 'en';\n  }\n\n  var encoded = util.stringToBytes(lang + text);\n  encoded.unshift(lang.length);\n\n  return encoded;\n}\n\nmodule.exports = {\n  encodePayload: encode,\n  decodePayload: decode,\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,UAAU;;AAI5B,SAASC,MAAM,CAACC,IAAI,EAAE;EACpB,IAAIC,kBAAkB,GAAGD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;;EAOvC,OAAOH,IAAI,CAACK,aAAa,CAACF,IAAI,CAACG,KAAK,CAACF,kBAAkB,GAAG,CAAC,CAAC,CAAC;AAC/D;;AAIA,SAASG,MAAM,CAACC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EAEpC,IAAI,CAACD,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI;EACb;EAEA,IAAIE,OAAO,GAAGX,IAAI,CAACY,aAAa,CAACH,IAAI,GAAGD,IAAI,CAAC;EAC7CG,OAAO,CAACE,OAAO,CAACJ,IAAI,CAACK,MAAM,CAAC;EAE5B,OAAOH,OAAO;AAChB;AAEAI,MAAM,CAACC,OAAO,GAAG;EACfC,aAAa,EAAEV,MAAM;EACrBW,aAAa,EAAEhB;AACjB,CAAC"},"metadata":{},"sourceType":"script"}