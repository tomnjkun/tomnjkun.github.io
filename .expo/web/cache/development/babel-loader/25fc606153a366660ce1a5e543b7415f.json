{"ast":null,"code":"\n\nfunction _utf8ArrayToStr(data) {\n  var extraByteMap = [1, 1, 1, 1, 2, 2, 3, 0];\n  var count = data.length;\n  var str = '';\n  for (var index = 0; index < count;) {\n    var ch = data[index++];\n    if (ch & 0x80) {\n      var extra = extraByteMap[ch >> 3 & 0x07];\n      if (!(ch & 0x40) || !extra || index + extra > count) {\n        return null;\n      }\n      ch = ch & 0x3f >> extra;\n      for (; extra > 0; extra -= 1) {\n        var chx = data[index++];\n        if ((chx & 0xc0) !== 0x80) {\n          return null;\n        }\n        ch = ch << 6 | chx & 0x3f;\n      }\n    }\n    str += String.fromCharCode(ch);\n  }\n  return str;\n}\n\nfunction _toUTF8Array(str) {\n  var out = [],\n    p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = c >> 6 | 192;\n      out[p++] = c & 63 | 128;\n    } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = c >> 18 | 240;\n      out[p++] = c >> 12 & 63 | 128;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    } else {\n      out[p++] = c >> 12 | 224;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    }\n  }\n  return out;\n}\nfunction stringToBytes(string) {\n  return _toUTF8Array(string);\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes === 'string') {\n    return bytes;\n  }\n  return _utf8ArrayToStr(bytes);\n}\n\nfunction bytesToHexString(bytes) {\n  var dec,\n    hexstring,\n    bytesAsHexString = '';\n  for (var i = 0; i < bytes.length; i++) {\n    if (bytes[i] >= 0) {\n      dec = bytes[i];\n    } else {\n      dec = 256 + bytes[i];\n    }\n    hexstring = dec.toString(16);\n    if (hexstring.length === 1) {\n      hexstring = '0' + hexstring;\n    }\n    bytesAsHexString += hexstring;\n  }\n  return bytesAsHexString;\n}\n\nfunction toHex(i) {\n  var hex;\n  if (i < 0) {\n    i += 256;\n  }\n  hex = i.toString(16);\n\n  if (hex.length === 1) {\n    hex = '0' + hex;\n  }\n  return hex;\n}\nfunction toPrintable(i) {\n  if (i >= 0x20 & i <= 0x7f) {\n    return String.fromCharCode(i);\n  } else {\n    return '.';\n  }\n}\nmodule.exports = {\n  stringToBytes: stringToBytes,\n  bytesToString: bytesToString,\n  bytesToHexString: bytesToHexString,\n  toHex: toHex,\n  toPrintable: toPrintable\n};","map":{"version":3,"names":["_utf8ArrayToStr","data","extraByteMap","count","length","str","index","ch","extra","chx","String","fromCharCode","_toUTF8Array","out","p","i","c","charCodeAt","stringToBytes","string","bytesToString","bytes","bytesToHexString","dec","hexstring","bytesAsHexString","toString","toHex","hex","toPrintable","module","exports"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-nfc-manager/ndef-lib/util.js"],"sourcesContent":["// ndef-util.js\n// Copyright 2013 Don Coleman\n//\n\n// https://weblog.rogueamoeba.com/2017/02/27/javascript-correctly-converting-a-byte-array-to-a-utf-8-string/\nfunction _utf8ArrayToStr(data) {\n  const extraByteMap = [1, 1, 1, 1, 2, 2, 3, 0];\n  var count = data.length;\n  var str = '';\n\n  for (var index = 0; index < count; ) {\n    var ch = data[index++];\n    if (ch & 0x80) {\n      var extra = extraByteMap[(ch >> 3) & 0x07];\n      if (!(ch & 0x40) || !extra || index + extra > count) {\n        return null;\n      }\n\n      ch = ch & (0x3f >> extra);\n      for (; extra > 0; extra -= 1) {\n        var chx = data[index++];\n        if ((chx & 0xc0) !== 0x80) {\n          return null;\n        }\n\n        ch = (ch << 6) | (chx & 0x3f);\n      }\n    }\n\n    str += String.fromCharCode(ch);\n  }\n\n  return str;\n}\n\n// https://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction _toUTF8Array(str) {\n  var out = [],\n    p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n}\n\nfunction stringToBytes(string) {\n  return _toUTF8Array(string);\n  // var bytes = Buffer(string).toJSON();\n  // if (bytes.hasOwnProperty('data')) {\n  //     // Node 0.12.x\n  //     return bytes.data;\n  // } else {\n  //     // Node 0.10.x\n  //     return bytes;\n  // }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes === 'string') {\n    return bytes;\n  }\n\n  return _utf8ArrayToStr(bytes);\n  // return Buffer(bytes).toString();\n}\n\n// useful for readable version of Tag UID\nfunction bytesToHexString(bytes) {\n  var dec,\n    hexstring,\n    bytesAsHexString = '';\n  for (var i = 0; i < bytes.length; i++) {\n    if (bytes[i] >= 0) {\n      dec = bytes[i];\n    } else {\n      dec = 256 + bytes[i];\n    }\n    hexstring = dec.toString(16);\n    // zero padding\n    if (hexstring.length === 1) {\n      hexstring = '0' + hexstring;\n    }\n    bytesAsHexString += hexstring;\n  }\n  return bytesAsHexString;\n}\n\n// i must be <= 256\nfunction toHex(i) {\n  var hex;\n\n  if (i < 0) {\n    i += 256;\n  }\n  hex = i.toString(16);\n\n  // zero padding\n  if (hex.length === 1) {\n    hex = '0' + hex;\n  }\n  return hex;\n}\n\nfunction toPrintable(i) {\n  if ((i >= 0x20) & (i <= 0x7f)) {\n    return String.fromCharCode(i);\n  } else {\n    return '.';\n  }\n}\n\nmodule.exports = {\n  stringToBytes: stringToBytes,\n  bytesToString: bytesToString,\n  bytesToHexString: bytesToHexString,\n  toHex: toHex,\n  toPrintable: toPrintable,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}