{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { callNative } from \"../NativeNfcManager\";\nimport { handleNativeException } from \"../NfcError\";\nvar MifareUltralightHandlerAndroid = function () {\n  function MifareUltralightHandlerAndroid(nfcManager) {\n    _classCallCheck(this, MifareUltralightHandlerAndroid);\n    this.nfcManager = nfcManager;\n  }\n  _createClass(MifareUltralightHandlerAndroid, [{\n    key: \"mifareUltralightReadPages\",\n    value: function () {\n      var _mifareUltralightReadPages = _asyncToGenerator(function* (pageOffset) {\n        return handleNativeException(callNative('mifareUltralightReadPages', [pageOffset]));\n      });\n      function mifareUltralightReadPages(_x) {\n        return _mifareUltralightReadPages.apply(this, arguments);\n      }\n      return mifareUltralightReadPages;\n    }()\n  }, {\n    key: \"mifareUltralightWritePage\",\n    value: function () {\n      var _mifareUltralightWritePage = _asyncToGenerator(function* (pageOffset, data) {\n        if (!data || !Array.isArray(data) || data.length !== this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE) {\n          throw new Error(\"data should be a non-empty Array[\" + this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE + \"] of integers (0 - 255)\");\n        }\n        return handleNativeException(callNative('mifareUltralightWritePage', [pageOffset, data]));\n      });\n      function mifareUltralightWritePage(_x2, _x3) {\n        return _mifareUltralightWritePage.apply(this, arguments);\n      }\n      return mifareUltralightWritePage;\n    }()\n  }]);\n  return MifareUltralightHandlerAndroid;\n}();\nexport { MifareUltralightHandlerAndroid };","map":{"version":3,"names":["callNative","handleNativeException","MifareUltralightHandlerAndroid","nfcManager","pageOffset","data","Array","isArray","length","MIFARE_ULTRALIGHT_PAGE_SIZE","Error"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-nfc-manager/src/NfcTech/MifareUltralightHandlerAndroid.js"],"sourcesContent":["import {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass MifareUltralightHandlerAndroid {\n  constructor(nfcManager) {\n    this.nfcManager = nfcManager;\n  }\n\n  async mifareUltralightReadPages(pageOffset) {\n    return handleNativeException(\n      callNative('mifareUltralightReadPages', [pageOffset]),\n    );\n  }\n\n  async mifareUltralightWritePage(pageOffset, data) {\n    if (\n      !data ||\n      !Array.isArray(data) ||\n      data.length !== this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE\n    ) {\n      throw new Error(\n        `data should be a non-empty Array[${this.nfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE}] of integers (0 - 255)`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareUltralightWritePage', [pageOffset, data]),\n    );\n  }\n}\n\nexport {MifareUltralightHandlerAndroid};\n"],"mappings":";;;AAAA,SAAQA,UAAU;AAClB,SAAQC,qBAAqB;AAAqB,IAE5CC,8BAA8B;EAClC,wCAAYC,UAAU,EAAE;IAAA;IACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAAC;IAAA;IAAA;MAAA,mDAED,WAAgCC,UAAU,EAAE;QAC1C,OAAOH,qBAAqB,CAC1BD,UAAU,CAAC,2BAA2B,EAAE,CAACI,UAAU,CAAC,CAAC,CACtD;MACH,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,mDAED,WAAgCA,UAAU,EAAEC,IAAI,EAAE;QAChD,IACE,CAACA,IAAI,IACL,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IACpBA,IAAI,CAACG,MAAM,KAAK,IAAI,CAACL,UAAU,CAACM,2BAA2B,EAC3D;UACA,MAAM,IAAIC,KAAK,uCACuB,IAAI,CAACP,UAAU,CAACM,2BAA2B,6BAChF;QACH;QAEA,OAAOR,qBAAqB,CAC1BD,UAAU,CAAC,2BAA2B,EAAE,CAACI,UAAU,EAAEC,IAAI,CAAC,CAAC,CAC5D;MACH,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAGH,SAAQH,8BAA8B"},"metadata":{},"sourceType":"module"}