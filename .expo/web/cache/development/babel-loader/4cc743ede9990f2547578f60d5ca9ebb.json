{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { DripsyProvider, makeTheme } from \"dripsy\";\nvar theme = makeTheme({\n  text: {\n    p: {\n      fontSize: 16\n    }\n  }\n});\nexport function Dripsy(param) {\n  var children = param.children;\n  return _jsxDEV(DripsyProvider, {\n    theme: theme,\n    ssr: true,\n    children: children\n  }, void 0, false, {\n    fileName: \"/Users/dp-tonmai/Documents/my-solito-app/packages/app/provider/dripsy.tsx\",\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Dripsy;\nvar _c;\n$RefreshReg$(_c, \"Dripsy\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' &&\n  '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/dp-tonmai/Documents/my-solito-app/packages/app/provider/dripsy.tsx"],"names":["DripsyProvider","makeTheme","theme","text","p","fontSize","Dripsy","children","ssr"],"mappings":"AAAA,SAAA,MAAA,IAAA,OAAA,QAAA,uBAAA;AAAA,SAASA,cAAc,EAAEC,SAAS,QAAQ,QAAA;AAE1C,IAAMC,KAAAA,GAAQD,SAAAA,CAAU;EAEtBE,IAAAA,EAAM;IACJC,CAAAA,EAAG;MACDC,QAAAA,EAAU;IACZ;EACF;AACF,CAAA,CAAA;AAEA,OAAO,SAASC,MAAAA,CAAO,KAA2C,EAAE;EAA7C,IAAEC,QAAAA,GAAF,KAAA,CAAEA,QAAAA;EACvB,OACE,OAAA,CAACP,cAAAA,EAAAA;IACCE,KAAAA,EAAOA,KAAAA;IAEPM,GAAG,EAAA,IAAA;cAEFD;;;;;;AAGP;KAVgBD,MAAAA","sourcesContent":["import { DripsyProvider, makeTheme } from 'dripsy'\n\nconst theme = makeTheme({\n  // https://www.dripsy.xyz/usage/theming/create\n  text: {\n    p: {\n      fontSize: 16,\n    },\n  },\n})\n\nexport function Dripsy({ children }: { children: React.ReactNode }) {\n  return (\n    <DripsyProvider\n      theme={theme}\n      // this disables SSR, since react-native-web doesn't have support for it (yet)\n      ssr\n    >\n      {children}\n    </DripsyProvider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}