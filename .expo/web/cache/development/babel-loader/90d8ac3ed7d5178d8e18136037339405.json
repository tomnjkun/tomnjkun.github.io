{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlatList = exports.DrawerLayoutAndroid = exports.TextInput = exports.Switch = exports.ScrollView = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _createNativeWrapper = _interopRequireDefault(require(\"../handlers/createNativeWrapper\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ScrollView = (0, _createNativeWrapper.default)(_reactNative.ScrollView, {\n  disallowInterruption: true\n});\nexports.ScrollView = ScrollView;\nvar Switch = (0, _createNativeWrapper.default)(_reactNative.Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexports.Switch = Switch;\nvar TextInput = (0, _createNativeWrapper.default)(_reactNative.TextInput);\nexports.TextInput = TextInput;\nvar DrawerLayoutAndroid = (0, _createNativeWrapper.default)(_reactNative.DrawerLayoutAndroid, {\n  disallowInterruption: true\n});\n\nexports.DrawerLayoutAndroid = DrawerLayoutAndroid;\nDrawerLayoutAndroid.positions = _reactNative.DrawerLayoutAndroid.positions;\nvar FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(_reactNative.FlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});\nexports.FlatList = FlatList;","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["ScrollView","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","positions","FlatList","forwardRef","props","ref","scrollProps"],"mappings":";;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AAAA;AAUA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,UAAU,GAAG,CAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,UAApB,EAAkC;EAC1DC,oBAAoB,EAAE;AADoC,CAAlC,CAAnB;;AAIA,IAAMC,MAAM,GAAG,CAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,MAApB,EAA8B;EAClDC,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDJ,oBAAoB,EAAE;AAH4B,CAA9B,CAAf;;AAKA,IAAMK,SAAS,GAAG,CAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,SAApB,CAAlB;;AACA,IAAMC,mBAAmB,GAAG,CAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,mBAApB,EAA2C;EAC5ER,oBAAoB,EAAE;AADsD,CAA3C,CAA5B;;;AAIPO,mBAAmB,CAACE,SAApBF,GAAgCC,YAAAA,CAAAA,mBAAAA,CAAsBC,SAAtDF;AAEO,IAAMG,QAAQ,GAAG,KAAK,CAACC,UAAN,CACtB,UAAoBC,KAApB,EAAiDC,GAAjD;EAAA,OACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAA,QAAD,EAAA,QAAA,CAAA;IACE,GAAG,EAAEA;EADP,CAAA,EAEMD,KAFN,EAAA;IAGE,qBAAqB,EAAGE,+BAAAA,WAAD;MAAA,OAAiB,KAAA,CAAA,aAAA,CAAC,UAAD,EAAgBA,WAAhB,CAAA;IAAA;EAH1C,CAAA,CAAA,CAFoB;AAAA,EAAjB","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"script"}