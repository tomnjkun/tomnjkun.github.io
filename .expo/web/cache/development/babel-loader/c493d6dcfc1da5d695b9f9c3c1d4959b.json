{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NativeNfcManager, NfcManagerEmitter, callNative } from \"./NativeNfcManager\";\nimport { NdefHandler, NdefStatus } from \"./NfcTech/NdefHandler\";\nimport { NfcAHandler } from \"./NfcTech/NfcAHandler\";\nimport { NfcVHandler } from \"./NfcTech/NfcVHandler\";\nimport { IsoDepHandler } from \"./NfcTech/IsoDepHandler\";\nimport { handleNativeException, buildNfcExceptionIOS, UserCancel } from \"./NfcError\";\nvar NfcEvents = {\n  DiscoverTag: 'NfcManagerDiscoverTag',\n  DiscoverBackgroundTag: 'NfcManagerDiscoverBackgroundTag',\n  SessionClosed: 'NfcManagerSessionClosed',\n  StateChanged: 'NfcManagerStateChanged'\n};\nvar NfcTech = {\n  Ndef: 'Ndef',\n  NfcA: 'NfcA',\n  NfcB: 'NfcB',\n  NfcF: 'NfcF',\n  NfcV: 'NfcV',\n  IsoDep: 'IsoDep',\n  MifareClassic: 'MifareClassic',\n  MifareUltralight: 'MifareUltralight',\n  MifareIOS: 'mifare',\n  Iso15693IOS: 'iso15693',\n  FelicaIOS: 'felica',\n  NdefFormatable: 'NdefFormatable'\n};\nvar DEFAULT_REGISTER_TAG_EVENT_OPTIONS = {\n  alertMessage: 'Please tap NFC tags',\n  invalidateAfterFirstRead: false,\n  isReaderModeEnabled: false,\n  readerModeFlags: 0,\n  readerModeDelay: 10\n};\nfunction NotImpl() {\n  throw new Error('not implemented');\n}\nfunction DoNothing() {\n  return _DoNothing.apply(this, arguments);\n}\nfunction _DoNothing() {\n  _DoNothing = _asyncToGenerator(function* () {\n  });\n  return _DoNothing.apply(this, arguments);\n}\nvar NfcManagerBase = function () {\n  function NfcManagerBase() {\n    var _this = this;\n    _classCallCheck(this, NfcManagerBase);\n    this.requestTechnology = NotImpl;\n    this.cancelTechnologyRequest = NotImpl;\n    this.getBackgroundTag = NotImpl;\n    this.clearBackgroundTag = NotImpl;\n    this.setAlertMessage = DoNothing;\n    this._onDiscoverTag = function (tag) {\n      var callback = _this._clientListeners[NfcEvents.DiscoverTag];\n      if (callback) {\n        callback(tag);\n      }\n    };\n    this._onDiscoverBackgroundTag = function (tag) {\n      var callback = _this._clientListeners[NfcEvents.DiscoverBackgroundTag];\n      if (callback) {\n        callback(tag);\n      }\n    };\n    this._onSessionClosedIOS = function (resp) {\n      var callback = _this._clientListeners[NfcEvents.SessionClosed];\n      if (callback) {\n        var error = buildNfcExceptionIOS(resp.error);\n        callback(error instanceof UserCancel ? null : error);\n      }\n    };\n    this._onStateChangedAndroid = function (state) {\n      var callback = _this._clientListeners[NfcEvents.StateChanged];\n      if (callback) {\n        callback(state);\n      }\n    };\n    this._subscribeNativeEvents = function () {\n      _this._subscriptions = {};\n      _this._clientListeners = {};\n      _this._subscriptions[NfcEvents.DiscoverTag] = NfcManagerEmitter.addListener(NfcEvents.DiscoverTag, _this._onDiscoverTag);\n      _this._subscriptions[NfcEvents.DiscoverBackgroundTag] = NfcManagerEmitter.addListener(NfcEvents.DiscoverBackgroundTag, _this._onDiscoverBackgroundTag);\n      if (Platform.OS === 'ios') {\n        _this._subscriptions[NfcEvents.SessionClosed] = NfcManagerEmitter.addListener(NfcEvents.SessionClosed, _this._onSessionClosedIOS);\n      }\n      if (Platform.OS === 'android') {\n        _this._subscriptions[NfcEvents.StateChanged] = NfcManagerEmitter.addListener(NfcEvents.StateChanged, _this._onStateChangedAndroid);\n      }\n    };\n    this._subscribeNativeEvents();\n  }\n  _createClass(NfcManagerBase, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(function* () {\n        return handleNativeException(callNative('start'));\n      });\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"isSupported\",\n    value: function () {\n      var _isSupported = _asyncToGenerator(function* () {\n        var tech = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        return handleNativeException(callNative('isSupported', [tech]));\n      });\n      function isSupported() {\n        return _isSupported.apply(this, arguments);\n      }\n      return isSupported;\n    }()\n  }, {\n    key: \"registerTagEvent\",\n    value: function () {\n      var _registerTagEvent = _asyncToGenerator(function* () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionsWithDefault = _objectSpread(_objectSpread({}, DEFAULT_REGISTER_TAG_EVENT_OPTIONS), options);\n        return handleNativeException(callNative('registerTagEvent', [optionsWithDefault]));\n      });\n      function registerTagEvent() {\n        return _registerTagEvent.apply(this, arguments);\n      }\n      return registerTagEvent;\n    }()\n  }, {\n    key: \"unregisterTagEvent\",\n    value: function () {\n      var _unregisterTagEvent = _asyncToGenerator(function* () {\n        return handleNativeException(callNative('unregisterTagEvent'));\n      });\n      function unregisterTagEvent() {\n        return _unregisterTagEvent.apply(this, arguments);\n      }\n      return unregisterTagEvent;\n    }()\n  }, {\n    key: \"getTag\",\n    value: function () {\n      var _getTag = _asyncToGenerator(function* () {\n        return handleNativeException(callNative('getTag'));\n      });\n      function getTag() {\n        return _getTag.apply(this, arguments);\n      }\n      return getTag;\n    }()\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener(name, callback) {\n      var allNfcEvents = Object.keys(NfcEvents).map(function (k) {\n        return NfcEvents[k];\n      });\n      if (allNfcEvents.indexOf(name) === -1) {\n        throw new Error('no such event');\n      }\n      this._clientListeners[name] = callback;\n    }\n  }, {\n    key: \"writeNdefMessage\",\n    value: function () {\n      var _writeNdefMessage = _asyncToGenerator(function* (bytes) {\n        return handleNativeException(callNative('writeNdefMessage', [bytes]));\n      });\n      function writeNdefMessage(_x) {\n        return _writeNdefMessage.apply(this, arguments);\n      }\n      return writeNdefMessage;\n    }()\n  }, {\n    key: \"getNdefMessage\",\n    value: function () {\n      var _getNdefMessage = _asyncToGenerator(function* () {\n        return handleNativeException(callNative('getNdefMessage'));\n      });\n      function getNdefMessage() {\n        return _getNdefMessage.apply(this, arguments);\n      }\n      return getNdefMessage;\n    }()\n  }, {\n    key: \"ndefHandler\",\n    get: function get() {\n      if (!this._ndefHandler) {\n        this._ndefHandler = new NdefHandler();\n      }\n      return this._ndefHandler;\n    }\n  }, {\n    key: \"nfcAHandler\",\n    get: function get() {\n      if (!this._nfcAHandler) {\n        this._nfcAHandler = new NfcAHandler();\n      }\n      return this._nfcAHandler;\n    }\n  }, {\n    key: \"nfcVHandler\",\n    get: function get() {\n      if (!this._nfcVHandler) {\n        this._nfcVHandler = new NfcVHandler();\n      }\n      return this._nfcVHandler;\n    }\n  }, {\n    key: \"isoDepHandler\",\n    get: function get() {\n      if (!this._isoDepHandler) {\n        this._isoDepHandler = new IsoDepHandler();\n      }\n      return this._isoDepHandler;\n    }\n  }, {\n    key: \"MIFARE_BLOCK_SIZE\",\n    get: function get() {\n      return NativeNfcManager.MIFARE_BLOCK_SIZE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_PAGE_SIZE\",\n    get: function get() {\n      return NativeNfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE\",\n    get: function get() {\n      return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE_C\",\n    get: function get() {\n      return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_C;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE_UNKNOWN\",\n    get: function get() {\n      return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_UNKNOWN;\n    }\n  }]);\n  return NfcManagerBase;\n}();\nexport { NfcTech, NfcEvents, NfcManagerBase, NdefStatus, DEFAULT_REGISTER_TAG_EVENT_OPTIONS };","map":{"version":3,"names":["NativeNfcManager","NfcManagerEmitter","callNative","NdefHandler","NdefStatus","NfcAHandler","NfcVHandler","IsoDepHandler","handleNativeException","buildNfcExceptionIOS","UserCancel","NfcEvents","DiscoverTag","DiscoverBackgroundTag","SessionClosed","StateChanged","NfcTech","Ndef","NfcA","NfcB","NfcF","NfcV","IsoDep","MifareClassic","MifareUltralight","MifareIOS","Iso15693IOS","FelicaIOS","NdefFormatable","DEFAULT_REGISTER_TAG_EVENT_OPTIONS","alertMessage","invalidateAfterFirstRead","isReaderModeEnabled","readerModeFlags","readerModeDelay","NotImpl","Error","DoNothing","NfcManagerBase","requestTechnology","cancelTechnologyRequest","getBackgroundTag","clearBackgroundTag","setAlertMessage","_onDiscoverTag","tag","callback","_clientListeners","_onDiscoverBackgroundTag","_onSessionClosedIOS","resp","error","_onStateChangedAndroid","state","_subscribeNativeEvents","_subscriptions","addListener","Platform","OS","tech","options","optionsWithDefault","name","allNfcEvents","Object","keys","map","k","indexOf","bytes","_ndefHandler","_nfcAHandler","_nfcVHandler","_isoDepHandler","MIFARE_BLOCK_SIZE","MIFARE_ULTRALIGHT_PAGE_SIZE","MIFARE_ULTRALIGHT_TYPE","MIFARE_ULTRALIGHT_TYPE_C","MIFARE_ULTRALIGHT_TYPE_UNKNOWN"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-nfc-manager/src/NfcManager.js"],"sourcesContent":["'use strict';\nimport {Platform} from 'react-native';\nimport {\n  NativeNfcManager,\n  NfcManagerEmitter,\n  callNative,\n} from './NativeNfcManager';\nimport {NdefHandler, NdefStatus} from './NfcTech/NdefHandler';\nimport {NfcAHandler} from './NfcTech/NfcAHandler';\nimport {NfcVHandler} from './NfcTech/NfcVHandler';\nimport {IsoDepHandler} from './NfcTech/IsoDepHandler';\nimport {\n  handleNativeException,\n  buildNfcExceptionIOS,\n  UserCancel,\n} from './NfcError';\n\nconst NfcEvents = {\n  DiscoverTag: 'NfcManagerDiscoverTag',\n  DiscoverBackgroundTag: 'NfcManagerDiscoverBackgroundTag',\n  SessionClosed: 'NfcManagerSessionClosed',\n  StateChanged: 'NfcManagerStateChanged',\n};\n\nconst NfcTech = {\n  Ndef: 'Ndef',\n  NfcA: 'NfcA',\n  NfcB: 'NfcB',\n  NfcF: 'NfcF',\n  NfcV: 'NfcV',\n  IsoDep: 'IsoDep',\n  MifareClassic: 'MifareClassic',\n  MifareUltralight: 'MifareUltralight',\n  MifareIOS: 'mifare',\n  Iso15693IOS: 'iso15693',\n  FelicaIOS: 'felica',\n  NdefFormatable: 'NdefFormatable',\n};\n\nconst DEFAULT_REGISTER_TAG_EVENT_OPTIONS = {\n  alertMessage: 'Please tap NFC tags',\n  invalidateAfterFirstRead: false,\n  isReaderModeEnabled: false,\n  readerModeFlags: 0,\n  readerModeDelay: 10,\n};\n\nfunction NotImpl() {\n  throw new Error('not implemented');\n}\n\nasync function DoNothing() {\n  // allow derived class to not implment it\n}\n\nclass NfcManagerBase {\n  constructor() {\n    this._subscribeNativeEvents();\n  }\n\n  async start() {\n    return handleNativeException(callNative('start'));\n  }\n\n  async isSupported(tech = '') {\n    return handleNativeException(callNative('isSupported', [tech]));\n  }\n\n  async registerTagEvent(options = {}) {\n    const optionsWithDefault = {\n      ...DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n      ...options,\n    };\n\n    return handleNativeException(\n      callNative('registerTagEvent', [optionsWithDefault]),\n    );\n  }\n\n  async unregisterTagEvent() {\n    return handleNativeException(callNative('unregisterTagEvent'));\n  }\n\n  async getTag() {\n    return handleNativeException(callNative('getTag'));\n  }\n\n  setEventListener(name, callback) {\n    const allNfcEvents = Object.keys(NfcEvents).map((k) => NfcEvents[k]);\n    if (allNfcEvents.indexOf(name) === -1) {\n      throw new Error('no such event');\n    }\n\n    this._clientListeners[name] = callback;\n  }\n\n  requestTechnology = NotImpl;\n\n  cancelTechnologyRequest = NotImpl;\n\n  getBackgroundTag = NotImpl;\n\n  clearBackgroundTag = NotImpl;\n\n  setAlertMessage = DoNothing;\n\n  async writeNdefMessage(bytes) {\n    return handleNativeException(callNative('writeNdefMessage', [bytes]));\n  }\n\n  async getNdefMessage() {\n    return handleNativeException(callNative('getNdefMessage'));\n  }\n\n  get ndefHandler() {\n    if (!this._ndefHandler) {\n      this._ndefHandler = new NdefHandler();\n    }\n    return this._ndefHandler;\n  }\n\n  get nfcAHandler() {\n    if (!this._nfcAHandler) {\n      this._nfcAHandler = new NfcAHandler();\n    }\n    return this._nfcAHandler;\n  }\n\n  get nfcVHandler() {\n    if (!this._nfcVHandler) {\n      this._nfcVHandler = new NfcVHandler();\n    }\n    return this._nfcVHandler;\n  }\n\n  get isoDepHandler() {\n    if (!this._isoDepHandler) {\n      this._isoDepHandler = new IsoDepHandler();\n    }\n    return this._isoDepHandler;\n  }\n\n  get MIFARE_BLOCK_SIZE() {\n    return NativeNfcManager.MIFARE_BLOCK_SIZE;\n  }\n  get MIFARE_ULTRALIGHT_PAGE_SIZE() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE;\n  }\n  get MIFARE_ULTRALIGHT_TYPE() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE;\n  }\n  get MIFARE_ULTRALIGHT_TYPE_C() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_C;\n  }\n  get MIFARE_ULTRALIGHT_TYPE_UNKNOWN() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_UNKNOWN;\n  }\n\n  _onDiscoverTag = (tag) => {\n    const callback = this._clientListeners[NfcEvents.DiscoverTag];\n    if (callback) {\n      callback(tag);\n    }\n  };\n\n  _onDiscoverBackgroundTag = (tag) => {\n    const callback = this._clientListeners[NfcEvents.DiscoverBackgroundTag];\n    if (callback) {\n      callback(tag);\n    }\n  };\n\n  _onSessionClosedIOS = (resp) => {\n    const callback = this._clientListeners[NfcEvents.SessionClosed];\n    if (callback) {\n      const error = buildNfcExceptionIOS(resp.error);\n      callback(error instanceof UserCancel ? null : error);\n    }\n  };\n\n  _onStateChangedAndroid = (state) => {\n    const callback = this._clientListeners[NfcEvents.StateChanged];\n    if (callback) {\n      callback(state);\n    }\n  };\n\n  _subscribeNativeEvents = () => {\n    this._subscriptions = {};\n    this._clientListeners = {};\n    this._subscriptions[NfcEvents.DiscoverTag] = NfcManagerEmitter.addListener(\n      NfcEvents.DiscoverTag,\n      this._onDiscoverTag,\n    );\n\n    this._subscriptions[NfcEvents.DiscoverBackgroundTag] = NfcManagerEmitter.addListener(\n      NfcEvents.DiscoverBackgroundTag,\n      this._onDiscoverBackgroundTag,\n    );\n\n    if (Platform.OS === 'ios') {\n      this._subscriptions[\n        NfcEvents.SessionClosed\n      ] = NfcManagerEmitter.addListener(\n        NfcEvents.SessionClosed,\n        this._onSessionClosedIOS,\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      this._subscriptions[\n        NfcEvents.StateChanged\n      ] = NfcManagerEmitter.addListener(\n        NfcEvents.StateChanged,\n        this._onStateChangedAndroid,\n      );\n    }\n  };\n}\n\nexport {\n  NfcTech,\n  NfcEvents,\n  NfcManagerBase,\n  NdefStatus,\n  DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}