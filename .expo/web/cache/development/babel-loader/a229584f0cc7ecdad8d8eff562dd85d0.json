{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n  _createClass(PixelRatio, null, [{\n    key: \"get\",\n    value:\n    function get() {\n      return _Dimensions.default.get('window').scale;\n    }\n  }, {\n    key: \"getFontScale\",\n    value:\n\n    function getFontScale() {\n      return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n    }\n  }, {\n    key: \"getPixelSizeForLayoutSize\",\n    value:\n\n    function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n  }, {\n    key: \"roundToNearestPixel\",\n    value:\n\n    function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n  return PixelRatio;\n}();\nexports.default = PixelRatio;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_Dimensions","PixelRatio","get","scale","fontScale","layoutSize","Math","round","ratio","module"],"sources":["/Users/dp-tonmai/Documents/my-solito-app/node_modules/react-native-web/dist/cjs/exports/PixelRatio/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\nclass PixelRatio {\n  /**\n   * Returns the device pixel density.\n   */\n  static get() {\n    return _Dimensions.default.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n\n\n  static getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  static getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  static roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  }\n\n}\n\nexports.default = PixelRatio;\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAEb,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAE5FC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACD,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIG,WAAW,GAAGL,sBAAsB,CAACC,OAAO,iBAAiB,CAAC;;AAAC,IAe7DK,UAAU;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAId,eAAa;MACX,OAAOD,WAAW,CAACH,OAAO,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;IAChD;EAAC;IAAA;IAAA;;IAMD,wBAAsB;MACpB,OAAOH,WAAW,CAACH,OAAO,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACE,SAAS,IAAIH,UAAU,CAACC,GAAG,EAAE;IACxE;EAAC;IAAA;IAAA;;IAOD,mCAAiCG,UAAU,EAAE;MAC3C,OAAOC,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGJ,UAAU,CAACC,GAAG,EAAE,CAAC;IAClD;EAAC;IAAA;IAAA;;IASD,6BAA2BG,UAAU,EAAE;MACrC,IAAIG,KAAK,GAAGP,UAAU,CAACC,GAAG,EAAE;MAC5B,OAAOI,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGG,KAAK,CAAC,GAAGA,KAAK;IAC/C;EAAC;EAAA;AAAA;AAIHV,OAAO,CAACD,OAAO,GAAGI,UAAU;AAC5BQ,MAAM,CAACX,OAAO,GAAGA,OAAO,CAACD,OAAO"},"metadata":{},"sourceType":"script"}