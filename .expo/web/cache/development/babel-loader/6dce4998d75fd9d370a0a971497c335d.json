{"ast":null,"code":"\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var NavigationProvider = function NavigationProvider(param) {\n  var children = param.children;\n  return _jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = NavigationProvider;\nvar _c;\n$RefreshReg$(_c, \"NavigationProvider\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' &&\n  '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/dp-tonmai/Documents/my-solito-app/packages/app/provider/navigation/index.web.tsx"],"names":["NavigationProvider","children"],"mappings":";AAIA,SAAA,MAAA,IAAA,OAAA,EAAA,QAAA,IAAA,SAAA,QAAA,uBAAA;AAAA,OAAO,IAAMA,kBAAAA,GAAqB,SAArBA,kBAAAA,CAAqB,KAAA,EAI5B;EAJ6B,IACjCC,QAAAA,GAGD,KAAA,CAHCA,QAAAA;SAGI,OAAA,CAAA,SAAA,EAAA;cAAGA;;AAAW,CAAA;KAJPD,kBAAAA","sourcesContent":["// on Web, we don't use React Navigation, so we avoid the provider altogether\n// instead, we just have a no-op here\n// for more, see: https://solito.dev/recipes/tree-shaking\n\nexport const NavigationProvider = ({\n  children,\n}: {\n  children: React.ReactElement\n}) => <>{children}</>\n"]},"metadata":{},"sourceType":"module"}