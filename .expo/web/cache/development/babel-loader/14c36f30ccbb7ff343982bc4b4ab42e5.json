{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _State = require(\"../State\");\nvar _constants = require(\"./constants\");\nvar _DiscreteGestureHandler = _interopRequireDefault(require(\"./DiscreteGestureHandler\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  _inherits(PressGestureHandler, _DiscreteGestureHandl);\n  var _super = _createSuper(PressGestureHandler);\n  function PressGestureHandler() {\n    var _this;\n    _classCallCheck(this, PressGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"visualFeedbackTimer\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"initialEvent\", null);\n    _defineProperty(_assertThisInitialized(_this), \"shouldDelayTouches\", true);\n    return _this;\n  }\n  _createClass(PressGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Press;\n    }\n  }, {\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n        maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _hammerjs$default$INP;\n      return (_hammerjs$default$INP = {}, _defineProperty2(_hammerjs$default$INP, _hammerjs.default.INPUT_START, _State.State.BEGAN), _defineProperty2(_hammerjs$default$INP, _hammerjs.default.INPUT_MOVE, _State.State.ACTIVE), _defineProperty2(_hammerjs$default$INP, _hammerjs.default.INPUT_END, _State.State.END), _defineProperty2(_hammerjs$default$INP, _hammerjs.default.INPUT_CANCEL, _State.State.CANCELLED), _hammerjs$default$INP)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          var timeout;\n          if (this.visualFeedbackTimer) {\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(function () {\n            _this3.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            }));\n\n            _this3.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n        shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n        _ref3$disallowInterru = _ref3.disallowInterruption,\n        disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n        _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n        shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n        _ref3$minDurationMs = _ref3.minDurationMs,\n        minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n        _ref3$maxDist = _ref3.maxDist,\n        maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n        _ref3$minPointers = _ref3.minPointers,\n        minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n        _ref3$maxPointers = _ref3.maxPointers,\n        maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n        props = _objectWithoutProperties(_ref3, _excluded);\n      return _get(_getPrototypeOf(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }]);\n  return PressGestureHandler;\n}(_DiscreteGestureHandler.default);\nvar _default = PressGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["PressGestureHandler.ts"],"names":["PressGestureHandler","DiscreteGestureHandler","name","minDurationMs","config","maxDist","NativeGestureClass","Hammer","Press","simulateCancelEvent","inputData","hasGestureFailed","cancelEvent","updateHasCustomActivationCriteria","shouldCancelWhenOutside","maxDistSq","getState","type","INPUT_START","State","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","getConfig","hasCustomActivationCriteria","getHammerConfig","time","onGestureActivated","ev","onGestureStart","shouldDelayTouchForEvent","pointerType","shouldDelayTouches","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","CONTENT_TOUCHES_DELAY","sendEvent","eventType","isFirst","forceInvalidate","event","onRawEvent","isFinal","timeout","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","onGestureEnded","updateGestureConfig","shouldActivateOnStart","disallowInterruption","Number","NaN","minPointers","maxPointers","props"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}